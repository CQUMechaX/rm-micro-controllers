; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = rm-dev-C

[env]
extra_scripts = pre:extra_script.py              ; The "extra_script.py" file must be located in the main project folder
build_type = debug
debug_build_flags = 
	-O0
	-ggdb
board_build.stm32cube.custom_config_header = yes ; see https://github.com/platformio/platform-ststm32/pull/503, with build flags
; build_flags = 
; 	; -DUSE_FULL_ASSERT
; 	-D__DSP_PRESENT
; 	-DARM_MATH_CM4
; 	-mfpu=fpv4-sp-d16
; 	-mfloat-abi=hardfp ; see https://github.com/platformio/platform-ststm32/issues/591 
; 	-std=c11
; 	-std=c++14
; build_unflags SEE ABOVE
platform = ststm32
framework = stm32cube
upload_protocol = stlink
monitor_speed = 115200
debug_tool = stlink
; debug_extra_cmds =
;     monitor arm semihosting enable
debug_init_cmds = 
	define pio_reset_halt_target
		$LOAD_CMDS
		monitor reset halt
		$INIT_BREAK
	end
	define pio_reset_run_target
		monitor reset
	end
	target extended-remote $DEBUG_PORT
	monitor init
	pio_reset_halt_target
debug_load_mode = modified
; See https://github.com/platformio/platformio-core/blob/develop/platformio/debug/config/generic.py
; debug_load_cmds =
    ; program {.pio/build/rm-dev-A/firmware.elf} verify reset
debug_init_break = tbreak StartDefaultTask ; in freertos.c

lib_ldf_mode = off
; Shrink the analysis time.

platform_packages = 
    toolchain-gccarmnoneeabi @ ~1.90301
; GNU toolchain 8+ Fix microros_param.c

; lib_deps = 
; 	mincrmatt12/STM32Cube Middleware-FreeRTOS @ ~10.3.1
; 	microROS
; 	CDC-Describe
; See ststm32/builder/frameworks/stm32cube.py#155

; custom_freertos_config_location = ./lib/HAL-Describe/Core/Inc/FreeRTOSConfig.h
custom_freertos_cmsis_impl = CMSIS_RTOS_V2
custom_freertos_features = 
	timers
custom_freertos_heap_impl = none
; See heap_4_custom.c

[env:rm-dev-A]
;1536Kbytes FLASH 320Kbytes RAM
board = genericSTM32F423CH
board_build.f_cpu = 180000000L
board_build.mcu = stm32f427iih6
build_flags = 
	-I./lib/HAL-F427/Core/Inc/
	-DSTM32F427xx
	-USTM32F423xx
	-DRM_DEV_A
custom_freertos_config_location = ./lib/HAL-F427/Core/Inc/FreeRTOSConfig.h
lib_deps = 
	mincrmatt12/STM32Cube Middleware-FreeRTOS @ ~10.3.1
	microROS
	CDC-Describe
	HAL-F427

[env:rm-dev-C]
;1024Kbytes FLASH 64Kbytes CCMRAM 128Kbytes RAM
board = genericSTM32F407IGT6
board_build.mcu = stm32f407igh6
build_flags = 
	-I./lib/HAL-F407/Core/Inc/
	-DRM_DEV_C
custom_freertos_config_location = ./lib/HAL-F407/Core/Inc/FreeRTOSConfig.h
lib_deps = 
	mincrmatt12/STM32Cube Middleware-FreeRTOS @ ~10.3.1
	microROS
	CDC-Describe
	HAL-F407
