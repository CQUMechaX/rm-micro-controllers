; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = rm-dev-C

[env]
extra_scripts = 
    pre:flags.py
    pre:compile_db_clangd.py
build_type = debug
debug_build_flags = 
	-O0
	-ggdb
platform = ststm32
framework = stm32cube
board_build.stm32cube.custom_config_header = yes # see https://github.com/platformio/platform-ststm32/pull/503, with build flags
upload_protocol = stlink
monitor_speed = 115200
debug_tool = stlink
debug_load_mode = modified
# debug_extra_cmds =
#     monitor arm semihosting enable
# debug_init_cmds = 
# 	define pio_reset_halt_target
# 		$LOAD_CMDS
# 		monitor reset halt
# 		$INIT_BREAK
# 	end
# 	define pio_reset_run_target
# 		monitor reset
# 	end
# 	target extended-remote $DEBUG_PORT
# 	monitor init
# 	pio_reset_halt_target
# See https://github.com/platformio/platformio-core/blob/develop/platformio/debug/config/generic.py
# debug_load_cmds =
#   program {.pio/build/rm-dev-A/firmware.elf} verify reset
debug_init_break = tbreak defaultTask # in freertos.c

lib_ldf_mode = off
; Shrink the analysis time.

platform_packages = 
	# GNU toolchain 8+ Fix microros_param.c
    toolchain-gccarmnoneeabi @ ~1.90301
	# Need package.json to work.
	# framework-stm32cubef4 @ https://github.com/STMicroelectronics/STM32CubeF4.git#v1.27.0
	# framework-stm32cubef4 @ https://github.com/STMicroelectronics/STM32CubeF4/archive/refs/tags/v1.27.0.tar.gz

# lib_deps =  # See each env

custom_freertos_cmsis_impl = CMSIS_RTOS_V2
custom_freertos_features = 
	timers
custom_freertos_heap_impl = none
; See heap_4_custom.c

[env:rm-dev-A]
;1536Kbytes FLASH 320Kbytes RAM
board = genericSTM32F427IIH6
build_flags = 
	-I./lib/HAL-F427/Core/Inc/
	-DRM_DEV_A
custom_freertos_config_location = ./lib/HAL-F427/Core/Inc/FreeRTOSConfig.h
lib_deps = 
	mincrmatt12/STM32Cube Middleware-FreeRTOS @ ~10.3.1
	microROS
	CDC-Describe
	HAL-F427

[env:rm-dev-C]
board = genericSTM32F407IGH6
build_flags = 
	-I./lib/HAL-F407/Core/Inc/
	-DRM_DEV_C
custom_freertos_config_location = ./lib/HAL-F407/Core/Inc/FreeRTOSConfig.h
lib_deps = 
	mincrmatt12/STM32Cube Middleware-FreeRTOS @ ~10.3.1
	microROS
	CDC-Describe
	HAL-F407
